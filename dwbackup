#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use Config::INI::Reader;

# Allow these environment variables to be set in the config file.
my @vars =qw(
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    PASSPHRASE
);

my %opt = (
    'config' => '/usr/local/etc/dwbackup.ini'
);

GetOptions(\%opt, 'config=s');

my $config = Config::INI::Reader->read_file($opt{config});

# Loop over each set.
for my $set (keys %$config) {

    # The global namespace is "_", so skip it.
    next if $set eq '_';

    # Make sure we have something to back up.
    die "Error: No backup source provided for set $set.\n" unless defined($$config{$set}{source});

    # Set environment variables for this set.
    setEnv($set);

    # Make sure we have a destination for this set.
    my $dest = $$config{$set}{dest} || $$config{_}{dest} . $set or
        die "Error: No backup destination provided for set $set.\n";

    # Build the command line to run.
    my $cmd = 'duplicity --name=' . $set;

    if (defined($$config{_}{gpg_key})) {
        $cmd .= ' --encrypt-key=' . $$config{_}{gpg_key} . ' --sign-key=' . $$config{_}{gpg_key}
    } else {
        $cmd .= ' --no-encryption';
    }

    if (defined($$config{$set}{exclude})) {
        my $exclude = '';
        for my $item (split /\s+/, $$config{$set}{exclude}) {
            $exclude .= ' --exclude ' . $item;
        }
        $cmd .= $exclude;
    }

    if (defined($$config{$set}{options})) {
        $cmd .= ' ' . $$config{$set}{options};
    }
        
    $cmd .= ' ' . $$config{$set}{source} . ' ' . $dest;

    system($cmd);

    # Clear environment variables for this set.
    wipeEnv();

}

# Set the environemnt variables for this set.
sub setEnv
{
    my $set = shift or return;
    for my $var (@vars) {
        if (defined($$config{$set}{lc($var)})) {
            $ENV{$var} = $$config{$set}{lc($var)};
            next;
        }
        if (defined($$config{_}{lc($var)})) {
            $ENV{$var} = $$config{_}{lc($var)};
            next;
        }
    }
}

# Clear the environment variables for this set.
sub wipeEnv
{
    for my $var (@vars) {
        delete $ENV{$var} if defined($ENV{$var});
    }
}
